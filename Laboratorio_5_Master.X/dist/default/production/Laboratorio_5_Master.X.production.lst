

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 13:28:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.10
    26                           ; Generated 31/07/2019 GMT
    27                           ; 
    28                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  0006                     _PORTBbits	set	6
   372  0013                     _SSPBUF	set	19
   373  0014                     _SSPCON	set	20
   374  0008                     _PORTD	set	8
   375  0006                     _PORTB	set	6
   376  0005                     _PORTA	set	5
   377  0063                     _SSPIF	set	99
   378  005E                     _PEIE	set	94
   379  005F                     _GIE	set	95
   380  0091                     _SSPCON2bits	set	145
   381  0087                     _TRISCbits	set	135
   382  0094                     _SSPSTAT	set	148
   383  0093                     _SSPADD	set	147
   384  0091                     _SSPCON2	set	145
   385  0088                     _TRISD	set	136
   386  0086                     _TRISB	set	134
   387  0085                     _TRISA	set	133
   388  0463                     _SSPIE	set	1123
   389  043C                     _TRISC4	set	1084
   390  043B                     _TRISC3	set	1083
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	strings
   395  0003                     __pstrings:	
   396  0003                     stringtab:	
   397  0003                     __stringtab:	
   398                           
   399                           ;	String table - string pointers are 1 byte each
   400  0003  1BFF               	btfsc	btemp+1,7
   401  0004  280D               	ljmp	stringcode
   402  0005  1383               	bcf	3,7
   403  0006  187F               	btfsc	btemp+1,0
   404  0007  1783               	bsf	3,7
   405  0008  0800               	movf	0,w
   406  0009  0A84               	incf	4,f
   407  000A  1903               	skipnz
   408  000B  0AFF               	incf	btemp+1,f
   409  000C  0008               	return
   410  000D                     stringcode:	
   411  000D                     stringdir:	
   412  000D  3000               	movlw	high stringdir
   413  000E  008A               	movwf	10
   414  000F  0804               	movf	4,w
   415  0010  0A84               	incf	4,f
   416  0011  0782               	addwf	2,f
   417  0012                     __stringbase:	
   418  0012  3400               	retlw	0
   419  0013                     __end_of__stringtab:	
   420  0013                     STR_2:	
   421  0013  3443               	retlw	67	;'C'
   422  0014  344F               	retlw	79	;'O'
   423  0015  3455               	retlw	85	;'U'
   424  0016  344E               	retlw	78	;'N'
   425  0017  3454               	retlw	84	;'T'
   426  0018  3400               	retlw	0
   427  0019                     STR_3:	
   428  0019  3453               	retlw	83	;'S'
   429  001A  344E               	retlw	78	;'N'
   430  001B  3453               	retlw	83	;'S'
   431  001C  3452               	retlw	82	;'R'
   432  001D  3400               	retlw	0
   433  001E                     STR_1:	
   434  001E  3441               	retlw	65	;'A'
   435  001F  3444               	retlw	68	;'D'
   436  0020  3443               	retlw	67	;'C'
   437  0021  3400               	retlw	0
   438  0022                     STR_4:	
   439  0022  3425               	retlw	37	;'%'
   440  0023  3464               	retlw	100	;'d'
   441  0024  3400               	retlw	0
   442                           
   443                           ; #config settings
   444  0000                     
   445                           	psect	cinit
   446  07F9                     start_initialization:	
   447  07F9                     __initialization:	
   448                           
   449                           ; Clear objects allocated to BANK0
   450  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   451  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   452  07FB  01AB               	clrf	__pbssBANK0& (0+127)
   453  07FC                     end_of_initialization:	
   454                           ;End of C runtime variable initialization code
   455                           
   456  07FC                     __end_of__initialization:	
   457  07FC  0183               	clrf	3
   458  07FD  120A  118A  2F44   	ljmp	_main	;jump to C main() function
   459                           
   460                           	psect	bssBANK0
   461  002B                     __pbssBANK0:	
   462  002B                     _adc:	
   463  002B                     	ds	1
   464                           
   465                           	psect	cstackCOMMON
   466  0070                     __pcstackCOMMON:	
   467  0070                     ?_initLCD:	
   468  0070                     ?_lcd_clr:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_I2C_Master_Start:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ??_I2C_Master_Start:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_I2C_Master_Write:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_I2C_Master_Stop:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ??_I2C_Master_Stop:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_lcd_cmd:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ??_lcd_cmd:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_main:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_I2C_Master_Wait:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ??_I2C_Master_Wait:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_lcd_write_char:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ??_lcd_write_char:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_I2C_Master_Read:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?___lldiv:	
   511                           ; 2 bytes @ 0x0
   512                           
   513  0070                     I2C_Master_Write@d:	
   514                           ; 4 bytes @ 0x0
   515                           
   516  0070                     I2C_Master_Read@a:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  0070                     ___lldiv@divisor:	
   520                           ; 2 bytes @ 0x0
   521                           
   522                           
   523                           ; 4 bytes @ 0x0
   524  0070                     	ds	2
   525  0072                     ??_I2C_Master_Write:	
   526  0072                     ??_I2C_Master_Read:	
   527                           ; 1 bytes @ 0x2
   528                           
   529  0072                     lcd_cmd@command:	
   530                           ; 1 bytes @ 0x2
   531                           
   532  0072                     lcd_write_char@var:	
   533                           ; 1 bytes @ 0x2
   534                           
   535                           
   536                           ; 1 bytes @ 0x2
   537  0072                     	ds	1
   538  0073                     ??_initLCD:	
   539  0073                     ??_lcd_clr:	
   540                           ; 1 bytes @ 0x3
   541                           
   542  0073                     ?_lcd_set_cursor:	
   543                           ; 1 bytes @ 0x3
   544                           
   545  0073                     ?_lcd_write_string:	
   546                           ; 1 bytes @ 0x3
   547                           
   548  0073                     lcd_set_cursor@posy:	
   549                           ; 1 bytes @ 0x3
   550                           
   551  0073                     lcd_write_string@var:	
   552                           ; 1 bytes @ 0x3
   553                           
   554                           
   555                           ; 2 bytes @ 0x3
   556  0073                     	ds	1
   557  0074                     ??_lcd_set_cursor:	
   558  0074                     lcd_set_cursor@posx:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0074                     I2C_Master_Read@temp:	
   562                           ; 1 bytes @ 0x4
   563                           
   564  0074                     ___lldiv@dividend:	
   565                           ; 2 bytes @ 0x4
   566                           
   567                           
   568                           ; 4 bytes @ 0x4
   569  0074                     	ds	1
   570  0075                     ??_lcd_write_string:	
   571                           
   572                           ; 1 bytes @ 0x5
   573  0075                     	ds	3
   574  0078                     ??___lldiv:	
   575  0078                     lcd_write_string@i:	
   576                           ; 1 bytes @ 0x8
   577                           
   578                           
   579                           ; 2 bytes @ 0x8
   580  0078                     	ds	1
   581  0079                     ___lldiv@quotient:	
   582                           
   583                           ; 4 bytes @ 0x9
   584  0079                     	ds	4
   585  007D                     ___lldiv@counter:	
   586                           
   587                           ; 1 bytes @ 0xD
   588  007D                     	ds	1
   589                           
   590                           	psect	cstackBANK0
   591  0020                     __pcstackBANK0:	
   592  0020                     ?_I2C_Master_Init:	
   593  0020                     I2C_Master_Init@c:	
   594                           ; 1 bytes @ 0x0
   595                           
   596                           
   597                           ; 4 bytes @ 0x0
   598  0020                     	ds	4
   599  0024                     ??_I2C_Master_Init:	
   600                           
   601                           ; 1 bytes @ 0x4
   602  0024                     	ds	4
   603  0028                     ??_main:	
   604                           
   605                           ; 1 bytes @ 0x8
   606  0028                     	ds	3
   607                           
   608                           	psect	maintext
   609  0744                     __pmaintext:	
   610 ;;
   611 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   612 ;;
   613 ;; *************** function _main *****************
   614 ;; Defined at:
   615 ;;		line 48 in file "I2C_Master.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : B00/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          0       3       0       0       0
   632 ;;      Totals:         0       3       0       0       0
   633 ;;Total ram usage:        3 bytes
   634 ;; Hardware stack levels required when called:    2
   635 ;; This function calls:
   636 ;;		_I2C_Master_Init
   637 ;;		_I2C_Master_Read
   638 ;;		_I2C_Master_Start
   639 ;;		_I2C_Master_Stop
   640 ;;		_I2C_Master_Write
   641 ;;		_initLCD
   642 ;;		_lcd_clr
   643 ;;		_lcd_set_cursor
   644 ;;		_lcd_write_string
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _main
   652  0744                     _main:	
   653  0744                     l992:	
   654                           ;incstack = 0
   655                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   656                           
   657                           
   658                           ;I2C_Master.c: 50:     ANSEL = 0;
   659  0744  1683               	bsf	3,5	;RP0=1, select bank3
   660  0745  1703               	bsf	3,6	;RP1=1, select bank3
   661  0746  0188               	clrf	8	;volatile
   662                           
   663                           ;I2C_Master.c: 51:     ANSELH = 0;
   664  0747  0189               	clrf	9	;volatile
   665                           
   666                           ;I2C_Master.c: 52:     TRISA = 0;
   667  0748  1683               	bsf	3,5	;RP0=1, select bank1
   668  0749  1303               	bcf	3,6	;RP1=0, select bank1
   669  074A  0185               	clrf	5	;volatile
   670                           
   671                           ;I2C_Master.c: 53:     TRISB = 0;
   672  074B  0186               	clrf	6	;volatile
   673                           
   674                           ;I2C_Master.c: 54:     TRISD = 0;
   675  074C  0188               	clrf	8	;volatile
   676                           
   677                           ;I2C_Master.c: 55:     PORTA = 0;
   678  074D  1283               	bcf	3,5	;RP0=0, select bank0
   679  074E  1303               	bcf	3,6	;RP1=0, select bank0
   680  074F  0185               	clrf	5	;volatile
   681                           
   682                           ;I2C_Master.c: 56:     PORTB = 0;
   683  0750  0186               	clrf	6	;volatile
   684                           
   685                           ;I2C_Master.c: 57:     PORTD = 0;
   686  0751  0188               	clrf	8	;volatile
   687  0752                     l994:	
   688                           
   689                           ;I2C_Master.c: 58:     initLCD();
   690  0752  120A  118A  268F  120A  118A  	fcall	_initLCD
   691  0757                     l996:	
   692                           
   693                           ;I2C_Master.c: 59:     I2C_Master_Init(100000);
   694  0757  3000               	movlw	0
   695  0758  1283               	bcf	3,5	;RP0=0, select bank0
   696  0759  1303               	bcf	3,6	;RP1=0, select bank0
   697  075A  00A3               	movwf	I2C_Master_Init@c+3
   698  075B  3001               	movlw	1
   699  075C  00A2               	movwf	I2C_Master_Init@c+2
   700  075D  3086               	movlw	134
   701  075E  00A1               	movwf	I2C_Master_Init@c+1
   702  075F  30A0               	movlw	160
   703  0760  00A0               	movwf	I2C_Master_Init@c
   704  0761  120A  118A  2615  120A  118A  	fcall	_I2C_Master_Init
   705  0766                     l998:	
   706                           
   707                           ;I2C_Master.c: 60:     lcd_clr();
   708  0766  120A  118A  2574  120A  118A  	fcall	_lcd_clr
   709  076B                     l1000:	
   710                           
   711                           ;I2C_Master.c: 61:     lcd_set_cursor(1,1);
   712  076B  01F3               	clrf	lcd_set_cursor@posy
   713  076C  0AF3               	incf	lcd_set_cursor@posy,f
   714  076D  3001               	movlw	1
   715  076E  120A  118A  25CC  120A  118A  	fcall	_lcd_set_cursor
   716  0773                     l1002:	
   717                           
   718                           ;I2C_Master.c: 62:     lcd_write_string ("ADC");
   719  0773  300C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   720  0774  00F3               	movwf	lcd_write_string@var
   721  0775  3080               	movlw	128
   722  0776  00F4               	movwf	lcd_write_string@var+1
   723  0777  120A  118A  264D  120A  118A  	fcall	_lcd_write_string
   724  077C                     l1004:	
   725                           
   726                           ;I2C_Master.c: 63:     lcd_set_cursor(7,1);
   727  077C  01F3               	clrf	lcd_set_cursor@posy
   728  077D  0AF3               	incf	lcd_set_cursor@posy,f
   729  077E  3007               	movlw	7
   730  077F  120A  118A  25CC  120A  118A  	fcall	_lcd_set_cursor
   731  0784                     l1006:	
   732                           
   733                           ;I2C_Master.c: 64:     lcd_write_string ("COUNT");
   734  0784  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   735  0785  00F3               	movwf	lcd_write_string@var
   736  0786  3080               	movlw	128
   737  0787  00F4               	movwf	lcd_write_string@var+1
   738  0788  120A  118A  264D  120A  118A  	fcall	_lcd_write_string
   739  078D                     l1008:	
   740                           
   741                           ;I2C_Master.c: 65:     lcd_set_cursor(13,1);
   742  078D  01F3               	clrf	lcd_set_cursor@posy
   743  078E  0AF3               	incf	lcd_set_cursor@posy,f
   744  078F  300D               	movlw	13
   745  0790  120A  118A  25CC  120A  118A  	fcall	_lcd_set_cursor
   746  0795                     l1010:	
   747                           
   748                           ;I2C_Master.c: 66:     lcd_write_string ("SNSR");
   749  0795  3007               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   750  0796  00F3               	movwf	lcd_write_string@var
   751  0797  3080               	movlw	128
   752  0798  00F4               	movwf	lcd_write_string@var+1
   753  0799  120A  118A  264D  120A  118A  	fcall	_lcd_write_string
   754  079E                     l1012:	
   755                           
   756                           ;I2C_Master.c: 72:         I2C_Master_Start();
   757  079E  120A  118A  257B  120A  118A  	fcall	_I2C_Master_Start
   758  07A3                     l1014:	
   759                           
   760                           ;I2C_Master.c: 73:         I2C_Master_Write(0x50);
   761  07A3  3050               	movlw	80
   762  07A4  00F0               	movwf	I2C_Master_Write@d
   763  07A5  3000               	movlw	0
   764  07A6  00F1               	movwf	I2C_Master_Write@d+1
   765  07A7  120A  118A  258D  120A  118A  	fcall	_I2C_Master_Write
   766  07AC                     l1016:	
   767                           
   768                           ;I2C_Master.c: 74:         I2C_Master_Write(10);
   769  07AC  300A               	movlw	10
   770  07AD  00F0               	movwf	I2C_Master_Write@d
   771  07AE  3000               	movlw	0
   772  07AF  00F1               	movwf	I2C_Master_Write@d+1
   773  07B0  120A  118A  258D  120A  118A  	fcall	_I2C_Master_Write
   774  07B5                     l1018:	
   775                           
   776                           ;I2C_Master.c: 75:         I2C_Master_Stop();
   777  07B5  120A  118A  2584  120A  118A  	fcall	_I2C_Master_Stop
   778  07BA                     l1020:	
   779                           
   780                           ;I2C_Master.c: 76:         _delay((unsigned long)((250)*(4000000/4000.0)));
   781  07BA  3002               	movlw	2
   782  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   783  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   784  07BD  00AA               	movwf	??_main+2
   785  07BE  3045               	movlw	69
   786  07BF  00A9               	movwf	??_main+1
   787  07C0  30A9               	movlw	169
   788  07C1  00A8               	movwf	??_main
   789  07C2                     u317:	
   790  07C2  0BA8               	decfsz	??_main,f
   791  07C3  2FC2               	goto	u317
   792  07C4  0BA9               	decfsz	??_main+1,f
   793  07C5  2FC2               	goto	u317
   794  07C6  0BAA               	decfsz	??_main+2,f
   795  07C7  2FC2               	goto	u317
   796  07C8                     l1022:	
   797                           
   798                           ;I2C_Master.c: 78:         I2C_Master_Start();
   799  07C8  120A  118A  257B  120A  118A  	fcall	_I2C_Master_Start
   800  07CD                     l1024:	
   801                           
   802                           ;I2C_Master.c: 79:         I2C_Master_Write(0x51);
   803  07CD  3051               	movlw	81
   804  07CE  00F0               	movwf	I2C_Master_Write@d
   805  07CF  3000               	movlw	0
   806  07D0  00F1               	movwf	I2C_Master_Write@d+1
   807  07D1  120A  118A  258D  120A  118A  	fcall	_I2C_Master_Write
   808  07D6                     l1026:	
   809                           
   810                           ;I2C_Master.c: 80:         PORTB = I2C_Master_Read(0);
   811  07D6  3000               	movlw	0
   812  07D7  00F0               	movwf	I2C_Master_Read@a
   813  07D8  00F1               	movwf	I2C_Master_Read@a+1
   814  07D9  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Read
   815  07DE  0870               	movf	?_I2C_Master_Read,w
   816  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   817  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   818  07E1  0086               	movwf	6	;volatile
   819  07E2                     l1028:	
   820                           
   821                           ;I2C_Master.c: 81:         I2C_Master_Stop();
   822  07E2  120A  118A  2584  120A  118A  	fcall	_I2C_Master_Stop
   823  07E7                     l1030:	
   824                           
   825                           ;I2C_Master.c: 82:         _delay((unsigned long)((250)*(4000000/4000.0)));
   826  07E7  3002               	movlw	2
   827  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   828  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   829  07EA  00AA               	movwf	??_main+2
   830  07EB  3045               	movlw	69
   831  07EC  00A9               	movwf	??_main+1
   832  07ED  30A9               	movlw	169
   833  07EE  00A8               	movwf	??_main
   834  07EF                     u327:	
   835  07EF  0BA8               	decfsz	??_main,f
   836  07F0  2FEF               	goto	u327
   837  07F1  0BA9               	decfsz	??_main+1,f
   838  07F2  2FEF               	goto	u327
   839  07F3  0BAA               	decfsz	??_main+2,f
   840  07F4  2FEF               	goto	u327
   841  07F5  2F9E               	goto	l1012
   842  07F6  120A  118A  2800   	ljmp	start
   843  07F9                     __end_of_main:	
   844                           
   845                           	psect	text1
   846  064D                     __ptext1:	
   847 ;; *************** function _lcd_write_string *****************
   848 ;; Defined at:
   849 ;;		line 59 in file "LCD_Init.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  var             2    3[COMMON] PTR unsigned char 
   852 ;;		 -> lcd_write_int@buffer(4), STR_3(5), STR_2(6), STR_1(4), 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  i               2    8[COMMON] int 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         2       0       0       0       0
   865 ;;      Locals:         2       0       0       0       0
   866 ;;      Temps:          3       0       0       0       0
   867 ;;      Totals:         7       0       0       0       0
   868 ;;Total ram usage:        7 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    1
   871 ;; This function calls:
   872 ;;		_lcd_write_char
   873 ;; This function is called by:
   874 ;;		_main
   875 ;;		_lcd_write_int
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           
   880                           ;psect for function _lcd_write_string
   881  064D                     _lcd_write_string:	
   882  064D                     l964:	
   883                           ;incstack = 0
   884                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   885                           
   886                           
   887                           ;LCD_Init.c: 60:     int i;;LCD_Init.c: 61:  for(i=0;var[i]!='\0';i++)
   888  064D  01F8               	clrf	lcd_write_string@i
   889  064E  01F9               	clrf	lcd_write_string@i+1
   890  064F  2E72               	goto	l970
   891  0650                     l966:	
   892                           
   893                           ;LCD_Init.c: 62:     lcd_write_char(var[i]);
   894  0650  0878               	movf	lcd_write_string@i,w
   895  0651  0773               	addwf	lcd_write_string@var,w
   896  0652  00F6               	movwf	??_lcd_write_string+1
   897  0653  0874               	movf	lcd_write_string@var+1,w
   898  0654  00F5               	movwf	??_lcd_write_string
   899  0655  1803               	skipnc
   900  0656  0AF5               	incf	??_lcd_write_string,f
   901  0657  1FF8               	btfss	lcd_write_string@i,7
   902  0658  2E5A               	goto	u270
   903  0659  03F5               	decf	??_lcd_write_string,f
   904  065A                     u270:	
   905  065A  0875               	movf	??_lcd_write_string,w
   906  065B  00F7               	movwf	??_lcd_write_string+2
   907  065C  0877               	movf	??_lcd_write_string+2,w
   908  065D  1283               	bcf	3,5	;RP0=0, select bank0
   909  065E  1303               	bcf	3,6	;RP1=0, select bank0
   910  065F  00FF               	movwf	btemp+1
   911  0660  0876               	movf	??_lcd_write_string+1,w
   912  0661  0084               	movwf	4
   913  0662  120A  118A  2003  120A  118A  	fcall	stringtab
   914  0667  120A  118A  25B8  120A  118A  	fcall	_lcd_write_char
   915  066C                     l968:	
   916  066C  3001               	movlw	1
   917  066D  07F8               	addwf	lcd_write_string@i,f
   918  066E  1803               	skipnc
   919  066F  0AF9               	incf	lcd_write_string@i+1,f
   920  0670  3000               	movlw	0
   921  0671  07F9               	addwf	lcd_write_string@i+1,f
   922  0672                     l970:	
   923  0672  0878               	movf	lcd_write_string@i,w
   924  0673  0773               	addwf	lcd_write_string@var,w
   925  0674  00F6               	movwf	??_lcd_write_string+1
   926  0675  0874               	movf	lcd_write_string@var+1,w
   927  0676  00F5               	movwf	??_lcd_write_string
   928  0677  1803               	skipnc
   929  0678  0AF5               	incf	??_lcd_write_string,f
   930  0679  1FF8               	btfss	lcd_write_string@i,7
   931  067A  2E7C               	goto	u280
   932  067B  03F5               	decf	??_lcd_write_string,f
   933  067C                     u280:	
   934  067C  0875               	movf	??_lcd_write_string,w
   935  067D  00F7               	movwf	??_lcd_write_string+2
   936  067E  0877               	movf	??_lcd_write_string+2,w
   937  067F  1283               	bcf	3,5	;RP0=0, select bank0
   938  0680  1303               	bcf	3,6	;RP1=0, select bank0
   939  0681  00FF               	movwf	btemp+1
   940  0682  0876               	movf	??_lcd_write_string+1,w
   941  0683  0084               	movwf	4
   942  0684  120A  118A  2003  120A  118A  	fcall	stringtab
   943  0689  3A00               	xorlw	0
   944  068A  1D03               	skipz
   945  068B  2E8D               	goto	u291
   946  068C  2E8E               	goto	u290
   947  068D                     u291:	
   948  068D  2E50               	goto	l966
   949  068E                     u290:	
   950  068E                     l134:	
   951  068E  0008               	return
   952  068F                     __end_of_lcd_write_string:	
   953                           
   954                           	psect	text2
   955  05B8                     __ptext2:	
   956 ;; *************** function _lcd_write_char *****************
   957 ;; Defined at:
   958 ;;		line 51 in file "LCD_Init.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  var             1    wreg     unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  var             1    2[COMMON] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       0       0       0       0
   973 ;;      Locals:         1       0       0       0       0
   974 ;;      Temps:          2       0       0       0       0
   975 ;;      Totals:         3       0       0       0       0
   976 ;;Total ram usage:        3 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_lcd_write_string
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           
   986                           ;psect for function _lcd_write_char
   987  05B8                     _lcd_write_char:	
   988                           
   989                           ;incstack = 0
   990                           ; Regs used in _lcd_write_char: [wreg]
   991                           ;lcd_write_char@var stored from wreg
   992  05B8  00F2               	movwf	lcd_write_char@var
   993  05B9                     l748:	
   994                           
   995                           ;LCD_Init.c: 52:     PORTBbits.RB6 = 1;
   996  05B9  1283               	bcf	3,5	;RP0=0, select bank0
   997  05BA  1303               	bcf	3,6	;RP1=0, select bank0
   998  05BB  1706               	bsf	6,6	;volatile
   999  05BC                     l750:	
  1000                           
  1001                           ;LCD_Init.c: 53:     PORTD = var;
  1002  05BC  0872               	movf	lcd_write_char@var,w
  1003  05BD  0088               	movwf	8	;volatile
  1004  05BE                     l752:	
  1005                           
  1006                           ;LCD_Init.c: 54:     PORTBbits.RB7 = 1;
  1007  05BE  1786               	bsf	6,7	;volatile
  1008                           
  1009                           ;LCD_Init.c: 55:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1010  05BF  3006               	movlw	6
  1011  05C0  00F1               	movwf	??_lcd_write_char+1
  1012  05C1  3030               	movlw	48
  1013  05C2  00F0               	movwf	??_lcd_write_char
  1014  05C3                     u337:	
  1015  05C3  0BF0               	decfsz	??_lcd_write_char,f
  1016  05C4  2DC3               	goto	u337
  1017  05C5  0BF1               	decfsz	??_lcd_write_char+1,f
  1018  05C6  2DC3               	goto	u337
  1019  05C7  0000               	nop
  1020  05C8                     l754:	
  1021                           
  1022                           ;LCD_Init.c: 56:     PORTBbits.RB7 = 0;
  1023  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1024  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1025  05CA  1386               	bcf	6,7	;volatile
  1026  05CB                     l128:	
  1027  05CB  0008               	return
  1028  05CC                     __end_of_lcd_write_char:	
  1029                           
  1030                           	psect	text3
  1031  05CC                     __ptext3:	
  1032 ;; *************** function _lcd_set_cursor *****************
  1033 ;; Defined at:
  1034 ;;		line 42 in file "LCD_Init.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  posx            1    wreg     unsigned char 
  1037 ;;  posy            1    3[COMMON] unsigned char 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  posx            1    4[COMMON] unsigned char 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         1       0       0       0       0
  1050 ;;      Locals:         1       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         2       0       0       0       0
  1053 ;;Total ram usage:        2 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    1
  1056 ;; This function calls:
  1057 ;;		_lcd_cmd
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _lcd_set_cursor
  1065  05CC                     _lcd_set_cursor:	
  1066                           
  1067                           ;incstack = 0
  1068                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1069                           ;lcd_set_cursor@posx stored from wreg
  1070  05CC  00F4               	movwf	lcd_set_cursor@posx
  1071  05CD                     l956:	
  1072                           
  1073                           ;LCD_Init.c: 43:     if(posy == 1){
  1074  05CD  0373               	decf	lcd_set_cursor@posy,w
  1075  05CE  1D03               	btfss	3,2
  1076  05CF  2DD1               	goto	u251
  1077  05D0  2DD2               	goto	u250
  1078  05D1                     u251:	
  1079  05D1  2DD9               	goto	l960
  1080  05D2                     u250:	
  1081  05D2                     l958:	
  1082                           
  1083                           ;LCD_Init.c: 44:         lcd_cmd (0x80 + posx - 1);
  1084  05D2  0874               	movf	lcd_set_cursor@posx,w
  1085  05D3  3E7F               	addlw	127
  1086  05D4  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1087  05D9                     l960:	
  1088                           
  1089                           ;LCD_Init.c: 46:     if(posy == 2){
  1090  05D9  3002               	movlw	2
  1091  05DA  0673               	xorwf	lcd_set_cursor@posy,w
  1092  05DB  1D03               	btfss	3,2
  1093  05DC  2DDE               	goto	u261
  1094  05DD  2DDF               	goto	u260
  1095  05DE                     u261:	
  1096  05DE  2DE6               	goto	l125
  1097  05DF                     u260:	
  1098  05DF                     l962:	
  1099                           
  1100                           ;LCD_Init.c: 47:         lcd_cmd (0xC0 + posx - 1);
  1101  05DF  0874               	movf	lcd_set_cursor@posx,w
  1102  05E0  3EBF               	addlw	191
  1103  05E1  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1104  05E6                     l125:	
  1105  05E6  0008               	return
  1106  05E7                     __end_of_lcd_set_cursor:	
  1107                           
  1108                           	psect	text4
  1109  0574                     __ptext4:	
  1110 ;; *************** function _lcd_clr *****************
  1111 ;; Defined at:
  1112 ;;		line 38 in file "LCD_Init.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    1
  1133 ;; This function calls:
  1134 ;;		_lcd_cmd
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           
  1141                           ;psect for function _lcd_clr
  1142  0574                     _lcd_clr:	
  1143  0574                     l812:	
  1144                           ;incstack = 0
  1145                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  1146                           
  1147                           
  1148                           ;LCD_Init.c: 39:     lcd_cmd(0x01);
  1149  0574  3001               	movlw	1
  1150  0575  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1151  057A                     l120:	
  1152  057A  0008               	return
  1153  057B                     __end_of_lcd_clr:	
  1154                           
  1155                           	psect	text5
  1156  068F                     __ptext5:	
  1157 ;; *************** function _initLCD *****************
  1158 ;; Defined at:
  1159 ;;		line 9 in file "LCD_Init.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0
  1175 ;;      Temps:          2       0       0       0       0
  1176 ;;      Totals:         2       0       0       0       0
  1177 ;;Total ram usage:        2 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    1
  1180 ;; This function calls:
  1181 ;;		_lcd_cmd
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _initLCD
  1189  068F                     _initLCD:	
  1190  068F                     l780:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1193                           
  1194                           
  1195                           ;LCD_Init.c: 10: _delay((unsigned long)((15)*(4000000/4000.0)));
  1196  068F  3014               	movlw	20
  1197  0690  00F4               	movwf	??_initLCD+1
  1198  0691  3079               	movlw	121
  1199  0692  00F3               	movwf	??_initLCD
  1200  0693                     u347:	
  1201  0693  0BF3               	decfsz	??_initLCD,f
  1202  0694  2E93               	goto	u347
  1203  0695  0BF4               	decfsz	??_initLCD+1,f
  1204  0696  2E93               	goto	u347
  1205  0697  2E98               	nop2
  1206  0698                     l782:	
  1207                           
  1208                           ;LCD_Init.c: 12: lcd_cmd(0x030);
  1209  0698  3030               	movlw	48
  1210  0699  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1211  069E                     l784:	
  1212                           
  1213                           ;LCD_Init.c: 13: _delay((unsigned long)((5)*(4000000/4000.0)));
  1214  069E  3007               	movlw	7
  1215  069F  00F4               	movwf	??_initLCD+1
  1216  06A0  307D               	movlw	125
  1217  06A1  00F3               	movwf	??_initLCD
  1218  06A2                     u357:	
  1219  06A2  0BF3               	decfsz	??_initLCD,f
  1220  06A3  2EA2               	goto	u357
  1221  06A4  0BF4               	decfsz	??_initLCD+1,f
  1222  06A5  2EA2               	goto	u357
  1223                           
  1224                           ;LCD_Init.c: 15: lcd_cmd(0x030);
  1225  06A6  3030               	movlw	48
  1226  06A7  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1227  06AC                     l786:	
  1228                           
  1229                           ;LCD_Init.c: 16: _delay((unsigned long)((11)*(4000000/4000.0)));
  1230  06AC  300F               	movlw	15
  1231  06AD  00F4               	movwf	??_initLCD+1
  1232  06AE  3047               	movlw	71
  1233  06AF  00F3               	movwf	??_initLCD
  1234  06B0                     u367:	
  1235  06B0  0BF3               	decfsz	??_initLCD,f
  1236  06B1  2EB0               	goto	u367
  1237  06B2  0BF4               	decfsz	??_initLCD+1,f
  1238  06B3  2EB0               	goto	u367
  1239  06B4  2EB5               	nop2
  1240  06B5                     l788:	
  1241                           
  1242                           ;LCD_Init.c: 18: lcd_cmd(0x030);
  1243  06B5  3030               	movlw	48
  1244  06B6  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1245                           
  1246                           ;LCD_Init.c: 19: _delay((unsigned long)((160)*(4000000/4000000.0)));
  1247  06BB  3035               	movlw	53
  1248  06BC  00F3               	movwf	??_initLCD
  1249  06BD                     u377:	
  1250  06BD  0BF3               	decfsz	??_initLCD,f
  1251  06BE  2EBD               	goto	u377
  1252  06BF                     l790:	
  1253                           
  1254                           ;LCD_Init.c: 21: lcd_cmd(0x38);
  1255  06BF  3038               	movlw	56
  1256  06C0  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1257  06C5                     l792:	
  1258                           
  1259                           ;LCD_Init.c: 22: lcd_cmd(0x10);
  1260  06C5  3010               	movlw	16
  1261  06C6  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1262  06CB                     l794:	
  1263                           
  1264                           ;LCD_Init.c: 23: lcd_cmd(0x01);
  1265  06CB  3001               	movlw	1
  1266  06CC  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1267  06D1                     l796:	
  1268                           
  1269                           ;LCD_Init.c: 24: lcd_cmd(0x06);
  1270  06D1  3006               	movlw	6
  1271  06D2  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1272  06D7                     l798:	
  1273                           
  1274                           ;LCD_Init.c: 25: lcd_cmd(0x0C);
  1275  06D7  300C               	movlw	12
  1276  06D8  120A  118A  25A4  120A  118A  	fcall	_lcd_cmd
  1277  06DD                     l114:	
  1278  06DD  0008               	return
  1279  06DE                     __end_of_initLCD:	
  1280                           
  1281                           	psect	text6
  1282  05A4                     __ptext6:	
  1283 ;; *************** function _lcd_cmd *****************
  1284 ;; Defined at:
  1285 ;;		line 30 in file "LCD_Init.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  command         1    wreg     unsigned char 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  command         1    2[COMMON] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         0       0       0       0       0
  1300 ;;      Locals:         1       0       0       0       0
  1301 ;;      Temps:          2       0       0       0       0
  1302 ;;      Totals:         3       0       0       0       0
  1303 ;;Total ram usage:        3 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_initLCD
  1309 ;;		_lcd_clr
  1310 ;;		_lcd_set_cursor
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _lcd_cmd
  1316  05A4                     _lcd_cmd:	
  1317                           
  1318                           ;incstack = 0
  1319                           ; Regs used in _lcd_cmd: [wreg]
  1320                           ;lcd_cmd@command stored from wreg
  1321  05A4  00F2               	movwf	lcd_cmd@command
  1322  05A5                     l740:	
  1323                           
  1324                           ;LCD_Init.c: 31:     PORTBbits.RB6 = 0;
  1325  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1326  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1327  05A7  1306               	bcf	6,6	;volatile
  1328  05A8                     l742:	
  1329                           
  1330                           ;LCD_Init.c: 32:     PORTD = command;
  1331  05A8  0872               	movf	lcd_cmd@command,w
  1332  05A9  0088               	movwf	8	;volatile
  1333  05AA                     l744:	
  1334                           
  1335                           ;LCD_Init.c: 33:     PORTBbits.RB7 = 1;
  1336  05AA  1786               	bsf	6,7	;volatile
  1337                           
  1338                           ;LCD_Init.c: 34:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1339  05AB  3006               	movlw	6
  1340  05AC  00F1               	movwf	??_lcd_cmd+1
  1341  05AD  3030               	movlw	48
  1342  05AE  00F0               	movwf	??_lcd_cmd
  1343  05AF                     u387:	
  1344  05AF  0BF0               	decfsz	??_lcd_cmd,f
  1345  05B0  2DAF               	goto	u387
  1346  05B1  0BF1               	decfsz	??_lcd_cmd+1,f
  1347  05B2  2DAF               	goto	u387
  1348  05B3  0000               	nop
  1349  05B4                     l746:	
  1350                           
  1351                           ;LCD_Init.c: 35:     PORTBbits.RB7 = 0;
  1352  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1353  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1354  05B6  1386               	bcf	6,7	;volatile
  1355  05B7                     l117:	
  1356  05B7  0008               	return
  1357  05B8                     __end_of_lcd_cmd:	
  1358                           
  1359                           	psect	text7
  1360  058D                     __ptext7:	
  1361 ;; *************** function _I2C_Master_Write *****************
  1362 ;; Defined at:
  1363 ;;		line 54 in file "I2C_Init.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  d               2    0[COMMON] unsigned int 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0, pclath, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         2       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0
  1380 ;;      Totals:         2       0       0       0       0
  1381 ;;Total ram usage:        2 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    1
  1384 ;; This function calls:
  1385 ;;		_I2C_Master_Wait
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function _I2C_Master_Write
  1393  058D                     _I2C_Master_Write:	
  1394  058D                     l972:	
  1395                           ;incstack = 0
  1396                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1397                           
  1398                           
  1399                           ;I2C_Init.c: 54: void I2C_Master_Write(unsigned d);I2C_Init.c: 55: {;I2C_Init.c: 56:    
      +                           I2C_Master_Wait();
  1400  058D  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Wait
  1401  0592                     l974:	
  1402                           
  1403                           ;I2C_Init.c: 57:     SSPBUF = d;
  1404  0592  0870               	movf	I2C_Master_Write@d,w
  1405  0593  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0594  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0595  0093               	movwf	19	;volatile
  1408  0596                     l93:	
  1409  0596  0008               	return
  1410  0597                     __end_of_I2C_Master_Write:	
  1411                           
  1412                           	psect	text8
  1413  0584                     __ptext8:	
  1414 ;; *************** function _I2C_Master_Stop *****************
  1415 ;; Defined at:
  1416 ;;		line 44 in file "I2C_Init.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, pclath, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1430 ;;      Params:         0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    1
  1437 ;; This function calls:
  1438 ;;		_I2C_Master_Wait
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           
  1445                           ;psect for function _I2C_Master_Stop
  1446  0584                     _I2C_Master_Stop:	
  1447  0584                     l838:	
  1448                           ;incstack = 0
  1449                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1450                           
  1451                           
  1452                           ;I2C_Init.c: 46:     I2C_Master_Wait();
  1453  0584  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Wait
  1454  0589                     l840:	
  1455                           
  1456                           ;I2C_Init.c: 47:     SSPCON2bits.PEN = 1;
  1457  0589  1683               	bsf	3,5	;RP0=1, select bank1
  1458  058A  1303               	bcf	3,6	;RP1=0, select bank1
  1459  058B  1511               	bsf	17,2	;volatile
  1460  058C                     l90:	
  1461  058C  0008               	return
  1462  058D                     __end_of_I2C_Master_Stop:	
  1463                           
  1464                           	psect	text9
  1465  057B                     __ptext9:	
  1466 ;; *************** function _I2C_Master_Start *****************
  1467 ;; Defined at:
  1468 ;;		line 28 in file "I2C_Init.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0, pclath, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       0       0       0       0
  1483 ;;      Locals:         0       0       0       0       0
  1484 ;;      Temps:          0       0       0       0       0
  1485 ;;      Totals:         0       0       0       0       0
  1486 ;;Total ram usage:        0 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    1
  1489 ;; This function calls:
  1490 ;;		_I2C_Master_Wait
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _I2C_Master_Start
  1498  057B                     _I2C_Master_Start:	
  1499  057B                     l830:	
  1500                           ;incstack = 0
  1501                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1502                           
  1503                           
  1504                           ;I2C_Init.c: 30:     I2C_Master_Wait();
  1505  057B  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Wait
  1506  0580                     l832:	
  1507                           
  1508                           ;I2C_Init.c: 31:     SSPCON2bits.SEN = 1;
  1509  0580  1683               	bsf	3,5	;RP0=1, select bank1
  1510  0581  1303               	bcf	3,6	;RP1=0, select bank1
  1511  0582  1411               	bsf	17,0	;volatile
  1512  0583                     l84:	
  1513  0583  0008               	return
  1514  0584                     __end_of_I2C_Master_Start:	
  1515                           
  1516                           	psect	text10
  1517  05E7                     __ptext10:	
  1518 ;; *************** function _I2C_Master_Read *****************
  1519 ;; Defined at:
  1520 ;;		line 63 in file "I2C_Init.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  a               2    0[COMMON] unsigned short 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  temp            2    4[COMMON] unsigned short 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2    0[COMMON] unsigned short 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0, pclath, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1534 ;;      Params:         2       0       0       0       0
  1535 ;;      Locals:         2       0       0       0       0
  1536 ;;      Temps:          2       0       0       0       0
  1537 ;;      Totals:         6       0       0       0       0
  1538 ;;Total ram usage:        6 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    1
  1541 ;; This function calls:
  1542 ;;		_I2C_Master_Wait
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function _I2C_Master_Read
  1550  05E7                     _I2C_Master_Read:	
  1551  05E7                     l976:	
  1552                           ;incstack = 0
  1553                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1554                           
  1555                           
  1556                           ;I2C_Init.c: 63: unsigned short I2C_Master_Read(unsigned short a);I2C_Init.c: 64: {;I2C_
      +                          Init.c: 65:     unsigned short temp;;I2C_Init.c: 66:     I2C_Master_Wait();
  1557  05E7  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Wait
  1558  05EC                     l978:	
  1559                           
  1560                           ;I2C_Init.c: 67:     SSPCON2bits.RCEN = 1;
  1561  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1562  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1563  05EE  1591               	bsf	17,3	;volatile
  1564                           
  1565                           ;I2C_Init.c: 68:     I2C_Master_Wait();
  1566  05EF  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Wait
  1567  05F4                     l980:	
  1568                           
  1569                           ;I2C_Init.c: 69:     temp = SSPBUF;
  1570  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1571  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1572  05F6  0813               	movf	19,w	;volatile
  1573  05F7  00F2               	movwf	??_I2C_Master_Read
  1574  05F8  01F3               	clrf	??_I2C_Master_Read+1
  1575  05F9  0872               	movf	??_I2C_Master_Read,w
  1576  05FA  00F4               	movwf	I2C_Master_Read@temp
  1577  05FB  0873               	movf	??_I2C_Master_Read+1,w
  1578  05FC  00F5               	movwf	I2C_Master_Read@temp+1
  1579  05FD                     l982:	
  1580                           
  1581                           ;I2C_Init.c: 70:     I2C_Master_Wait();
  1582  05FD  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Wait
  1583  0602                     l984:	
  1584                           
  1585                           ;I2C_Init.c: 71:     if(a == 1){
  1586  0602  0370               	decf	I2C_Master_Read@a,w
  1587  0603  0471               	iorwf	I2C_Master_Read@a+1,w
  1588  0604  1D03               	btfss	3,2
  1589  0605  2E07               	goto	u301
  1590  0606  2E08               	goto	u300
  1591  0607                     u301:	
  1592  0607  2E0C               	goto	l96
  1593  0608                     u300:	
  1594  0608                     l986:	
  1595                           
  1596                           ;I2C_Init.c: 72:         SSPCON2bits.ACKDT = 0;
  1597  0608  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0609  1303               	bcf	3,6	;RP1=0, select bank1
  1599  060A  1291               	bcf	17,5	;volatile
  1600                           
  1601                           ;I2C_Init.c: 73:     }else{
  1602  060B  2E0F               	goto	l97
  1603  060C                     l96:	
  1604                           
  1605                           ;I2C_Init.c: 74:         SSPCON2bits.ACKDT = 1;
  1606  060C  1683               	bsf	3,5	;RP0=1, select bank1
  1607  060D  1303               	bcf	3,6	;RP1=0, select bank1
  1608  060E  1691               	bsf	17,5	;volatile
  1609  060F                     l97:	
  1610                           ;I2C_Init.c: 75:     }
  1611                           
  1612                           
  1613                           ;I2C_Init.c: 76:     SSPCON2bits.ACKEN = 1;
  1614  060F  1611               	bsf	17,4	;volatile
  1615  0610                     l988:	
  1616                           
  1617                           ;I2C_Init.c: 77:     return temp;
  1618  0610  0875               	movf	I2C_Master_Read@temp+1,w
  1619  0611  00F1               	movwf	?_I2C_Master_Read+1
  1620  0612  0874               	movf	I2C_Master_Read@temp,w
  1621  0613  00F0               	movwf	?_I2C_Master_Read
  1622  0614                     l98:	
  1623  0614  0008               	return
  1624  0615                     __end_of_I2C_Master_Read:	
  1625                           
  1626                           	psect	text11
  1627  0597                     __ptext11:	
  1628 ;; *************** function _I2C_Master_Wait *****************
  1629 ;; Defined at:
  1630 ;;		line 21 in file "I2C_Init.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0
  1647 ;;      Totals:         0       0       0       0       0
  1648 ;;Total ram usage:        0 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_I2C_Master_Start
  1654 ;;		_I2C_Master_Stop
  1655 ;;		_I2C_Master_Write
  1656 ;;		_I2C_Master_Read
  1657 ;;		_I2C_Master_RepeatedStart
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _I2C_Master_Wait
  1663  0597                     _I2C_Master_Wait:	
  1664  0597                     l736:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1667                           
  1668  0597                     l78:	
  1669                           ;I2C_Init.c: 23:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1670                           
  1671  0597  1683               	bsf	3,5	;RP0=1, select bank1
  1672  0598  1303               	bcf	3,6	;RP1=0, select bank1
  1673  0599  1914               	btfsc	20,2	;volatile
  1674  059A  2D9C               	goto	u11
  1675  059B  2D9D               	goto	u10
  1676  059C                     u11:	
  1677  059C  2D97               	goto	l78
  1678  059D                     u10:	
  1679  059D                     l738:	
  1680  059D  0811               	movf	17,w	;volatile
  1681  059E  391F               	andlw	31
  1682  059F  1D03               	btfss	3,2
  1683  05A0  2DA2               	goto	u21
  1684  05A1  2DA3               	goto	u20
  1685  05A2                     u21:	
  1686  05A2  2D97               	goto	l78
  1687  05A3                     u20:	
  1688  05A3                     l81:	
  1689  05A3  0008               	return
  1690  05A4                     __end_of_I2C_Master_Wait:	
  1691                           
  1692                           	psect	text12
  1693  0615                     __ptext12:	
  1694 ;; *************** function _I2C_Master_Init *****************
  1695 ;; Defined at:
  1696 ;;		line 5 in file "I2C_Init.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  c               4    0[BANK0 ] const unsigned long 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         0       4       0       0       0
  1711 ;;      Locals:         0       0       0       0       0
  1712 ;;      Temps:          0       4       0       0       0
  1713 ;;      Totals:         0       8       0       0       0
  1714 ;;Total ram usage:        8 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    1
  1717 ;; This function calls:
  1718 ;;		___lldiv
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _I2C_Master_Init
  1726  0615                     _I2C_Master_Init:	
  1727  0615                     l944:	
  1728                           ;incstack = 0
  1729                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1730                           
  1731                           
  1732                           ;I2C_Init.c: 5: void I2C_Master_Init(const unsigned long c);I2C_Init.c: 6: {;I2C_Init.c:
      +                           7:     SSPCON = 0b00101000;
  1733  0615  3028               	movlw	40
  1734  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0618  0094               	movwf	20	;volatile
  1737  0619                     l946:	
  1738                           
  1739                           ;I2C_Init.c: 8:     SSPCON2 = 0;
  1740  0619  1683               	bsf	3,5	;RP0=1, select bank1
  1741  061A  1303               	bcf	3,6	;RP1=0, select bank1
  1742  061B  0191               	clrf	17	;volatile
  1743  061C                     l948:	
  1744                           
  1745                           ;I2C_Init.c: 9:     SSPADD = (4000000/(4*c))-1;
  1746  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1747  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1748  061E  0820               	movf	I2C_Master_Init@c,w
  1749  061F  00A4               	movwf	??_I2C_Master_Init
  1750  0620  0821               	movf	I2C_Master_Init@c+1,w
  1751  0621  00A5               	movwf	??_I2C_Master_Init+1
  1752  0622  0822               	movf	I2C_Master_Init@c+2,w
  1753  0623  00A6               	movwf	??_I2C_Master_Init+2
  1754  0624  0823               	movf	I2C_Master_Init@c+3,w
  1755  0625  00A7               	movwf	??_I2C_Master_Init+3
  1756  0626  3002               	movlw	2
  1757  0627                     u245:	
  1758  0627  1003               	clrc
  1759  0628  0DA4               	rlf	??_I2C_Master_Init,f
  1760  0629  0DA5               	rlf	??_I2C_Master_Init+1,f
  1761  062A  0DA6               	rlf	??_I2C_Master_Init+2,f
  1762  062B  0DA7               	rlf	??_I2C_Master_Init+3,f
  1763  062C                     u240:	
  1764  062C  3EFF               	addlw	-1
  1765  062D  1D03               	skipz
  1766  062E  2E27               	goto	u245
  1767  062F  0827               	movf	??_I2C_Master_Init+3,w
  1768  0630  00F3               	movwf	___lldiv@divisor+3
  1769  0631  0826               	movf	??_I2C_Master_Init+2,w
  1770  0632  00F2               	movwf	___lldiv@divisor+2
  1771  0633  0825               	movf	??_I2C_Master_Init+1,w
  1772  0634  00F1               	movwf	___lldiv@divisor+1
  1773  0635  0824               	movf	??_I2C_Master_Init,w
  1774  0636  00F0               	movwf	___lldiv@divisor
  1775  0637  3000               	movlw	0
  1776  0638  00F7               	movwf	___lldiv@dividend+3
  1777  0639  303D               	movlw	61
  1778  063A  00F6               	movwf	___lldiv@dividend+2
  1779  063B  3009               	movlw	9
  1780  063C  00F5               	movwf	___lldiv@dividend+1
  1781  063D  3000               	movlw	0
  1782  063E  00F4               	movwf	___lldiv@dividend
  1783  063F  120A  118A  26DE  120A  118A  	fcall	___lldiv
  1784  0644  0870               	movf	?___lldiv,w
  1785  0645  3EFF               	addlw	255
  1786  0646  1683               	bsf	3,5	;RP0=1, select bank1
  1787  0647  1303               	bcf	3,6	;RP1=0, select bank1
  1788  0648  0093               	movwf	19	;volatile
  1789  0649                     l950:	
  1790                           
  1791                           ;I2C_Init.c: 10:     SSPSTAT = 0;
  1792  0649  0194               	clrf	20	;volatile
  1793  064A                     l952:	
  1794                           
  1795                           ;I2C_Init.c: 11:     TRISCbits.TRISC3 = 1;
  1796  064A  1587               	bsf	7,3	;volatile
  1797  064B                     l954:	
  1798                           
  1799                           ;I2C_Init.c: 12:     TRISCbits.TRISC4 = 1;
  1800  064B  1607               	bsf	7,4	;volatile
  1801  064C                     l75:	
  1802  064C  0008               	return
  1803  064D                     __end_of_I2C_Master_Init:	
  1804                           
  1805                           	psect	text13
  1806  06DE                     __ptext13:	
  1807 ;; *************** function ___lldiv *****************
  1808 ;; Defined at:
  1809 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  divisor         4    0[COMMON] unsigned long 
  1812 ;;  dividend        4    4[COMMON] unsigned long 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  quotient        4    9[COMMON] unsigned long 
  1815 ;;  counter         1   13[COMMON] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  4    0[COMMON] unsigned long 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         8       0       0       0       0
  1826 ;;      Locals:         5       0       0       0       0
  1827 ;;      Temps:          1       0       0       0       0
  1828 ;;      Totals:        14       0       0       0       0
  1829 ;;Total ram usage:       14 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_I2C_Master_Init
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           
  1839                           ;psect for function ___lldiv
  1840  06DE                     ___lldiv:	
  1841  06DE                     l920:	
  1842                           ;incstack = 0
  1843                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1844                           
  1845  06DE  3000               	movlw	0
  1846  06DF  00FC               	movwf	___lldiv@quotient+3
  1847  06E0  3000               	movlw	0
  1848  06E1  00FB               	movwf	___lldiv@quotient+2
  1849  06E2  3000               	movlw	0
  1850  06E3  00FA               	movwf	___lldiv@quotient+1
  1851  06E4  3000               	movlw	0
  1852  06E5  00F9               	movwf	___lldiv@quotient
  1853  06E6  0873               	movf	___lldiv@divisor+3,w
  1854  06E7  0472               	iorwf	___lldiv@divisor+2,w
  1855  06E8  0471               	iorwf	___lldiv@divisor+1,w
  1856  06E9  0470               	iorwf	___lldiv@divisor,w
  1857  06EA  1903               	skipnz
  1858  06EB  2EED               	goto	u171
  1859  06EC  2EEE               	goto	u170
  1860  06ED                     u171:	
  1861  06ED  2F3B               	goto	l940
  1862  06EE                     u170:	
  1863  06EE                     l922:	
  1864  06EE  01FD               	clrf	___lldiv@counter
  1865  06EF  0AFD               	incf	___lldiv@counter,f
  1866  06F0  2EFE               	goto	l926
  1867  06F1                     l924:	
  1868  06F1  3001               	movlw	1
  1869  06F2  00F8               	movwf	??___lldiv
  1870  06F3                     u185:	
  1871  06F3  1003               	clrc
  1872  06F4  0DF0               	rlf	___lldiv@divisor,f
  1873  06F5  0DF1               	rlf	___lldiv@divisor+1,f
  1874  06F6  0DF2               	rlf	___lldiv@divisor+2,f
  1875  06F7  0DF3               	rlf	___lldiv@divisor+3,f
  1876  06F8  0BF8               	decfsz	??___lldiv,f
  1877  06F9  2EF3               	goto	u185
  1878  06FA  3001               	movlw	1
  1879  06FB  00F8               	movwf	??___lldiv
  1880  06FC  0878               	movf	??___lldiv,w
  1881  06FD  07FD               	addwf	___lldiv@counter,f
  1882  06FE                     l926:	
  1883  06FE  1FF3               	btfss	___lldiv@divisor+3,7
  1884  06FF  2F01               	goto	u191
  1885  0700  2F02               	goto	u190
  1886  0701                     u191:	
  1887  0701  2EF1               	goto	l924
  1888  0702                     u190:	
  1889  0702                     l928:	
  1890  0702  3001               	movlw	1
  1891  0703  00F8               	movwf	??___lldiv
  1892  0704                     u205:	
  1893  0704  1003               	clrc
  1894  0705  0DF9               	rlf	___lldiv@quotient,f
  1895  0706  0DFA               	rlf	___lldiv@quotient+1,f
  1896  0707  0DFB               	rlf	___lldiv@quotient+2,f
  1897  0708  0DFC               	rlf	___lldiv@quotient+3,f
  1898  0709  0BF8               	decfsz	??___lldiv,f
  1899  070A  2F04               	goto	u205
  1900  070B                     l930:	
  1901  070B  0873               	movf	___lldiv@divisor+3,w
  1902  070C  0277               	subwf	___lldiv@dividend+3,w
  1903  070D  1D03               	skipz
  1904  070E  2F19               	goto	u215
  1905  070F  0872               	movf	___lldiv@divisor+2,w
  1906  0710  0276               	subwf	___lldiv@dividend+2,w
  1907  0711  1D03               	skipz
  1908  0712  2F19               	goto	u215
  1909  0713  0871               	movf	___lldiv@divisor+1,w
  1910  0714  0275               	subwf	___lldiv@dividend+1,w
  1911  0715  1D03               	skipz
  1912  0716  2F19               	goto	u215
  1913  0717  0870               	movf	___lldiv@divisor,w
  1914  0718  0274               	subwf	___lldiv@dividend,w
  1915  0719                     u215:	
  1916  0719  1C03               	skipc
  1917  071A  2F1C               	goto	u211
  1918  071B  2F1D               	goto	u210
  1919  071C                     u211:	
  1920  071C  2F2C               	goto	l936
  1921  071D                     u210:	
  1922  071D                     l932:	
  1923  071D  0870               	movf	___lldiv@divisor,w
  1924  071E  02F4               	subwf	___lldiv@dividend,f
  1925  071F  0871               	movf	___lldiv@divisor+1,w
  1926  0720  1C03               	skipc
  1927  0721  0F71               	incfsz	___lldiv@divisor+1,w
  1928  0722  02F5               	subwf	___lldiv@dividend+1,f
  1929  0723  0872               	movf	___lldiv@divisor+2,w
  1930  0724  1C03               	skipc
  1931  0725  0F72               	incfsz	___lldiv@divisor+2,w
  1932  0726  02F6               	subwf	___lldiv@dividend+2,f
  1933  0727  0873               	movf	___lldiv@divisor+3,w
  1934  0728  1C03               	skipc
  1935  0729  0F73               	incfsz	___lldiv@divisor+3,w
  1936  072A  02F7               	subwf	___lldiv@dividend+3,f
  1937  072B                     l934:	
  1938  072B  1479               	bsf	___lldiv@quotient,0
  1939  072C                     l936:	
  1940  072C  3001               	movlw	1
  1941  072D                     u225:	
  1942  072D  1003               	clrc
  1943  072E  0CF3               	rrf	___lldiv@divisor+3,f
  1944  072F  0CF2               	rrf	___lldiv@divisor+2,f
  1945  0730  0CF1               	rrf	___lldiv@divisor+1,f
  1946  0731  0CF0               	rrf	___lldiv@divisor,f
  1947  0732  3EFF               	addlw	-1
  1948  0733  1D03               	skipz
  1949  0734  2F2D               	goto	u225
  1950  0735                     l938:	
  1951  0735  3001               	movlw	1
  1952  0736  02FD               	subwf	___lldiv@counter,f
  1953  0737  1D03               	btfss	3,2
  1954  0738  2F3A               	goto	u231
  1955  0739  2F3B               	goto	u230
  1956  073A                     u231:	
  1957  073A  2F02               	goto	l928
  1958  073B                     u230:	
  1959  073B                     l940:	
  1960  073B  087C               	movf	___lldiv@quotient+3,w
  1961  073C  00F3               	movwf	?___lldiv+3
  1962  073D  087B               	movf	___lldiv@quotient+2,w
  1963  073E  00F2               	movwf	?___lldiv+2
  1964  073F  087A               	movf	___lldiv@quotient+1,w
  1965  0740  00F1               	movwf	?___lldiv+1
  1966  0741  0879               	movf	___lldiv@quotient,w
  1967  0742  00F0               	movwf	?___lldiv
  1968  0743                     l259:	
  1969  0743  0008               	return
  1970  0744                     __end_of___lldiv:	
  1971  007E                     btemp	set	126	;btemp
  1972  007E                     wtemp0	set	126


Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S667__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S667__prbuf$ptr	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_write_int@buffer(COMMON[4]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_write_int@buffer(COMMON[4]), 

    lcd_write_string@var	PTR unsigned char  size(2) Largest target is 6
		 -> lcd_write_int@buffer(COMMON[4]), STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _lcd_write_string->_lcd_write_char
    _lcd_set_cursor->_lcd_cmd
    _lcd_clr->_lcd_cmd
    _initLCD->_lcd_cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1553
                                              8 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                            _lcd_clr
                     _lcd_set_cursor
                   _lcd_write_string
 ---------------------------------------------------------------------------------
 (1) _lcd_write_string                                     7     5      2     409
                                              3 COMMON     7     5      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       2     1      1     331
                                              3 COMMON     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clr                                              0     0      0      15
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      15
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcd_cmd
   _lcd_clr
     _lcd_cmd
   _lcd_set_cursor
     _lcd_cmd
   _lcd_write_string
     _lcd_write_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 13:28:01 2020

                        pc 0002                __CFG_CP$OFF 0000                         l81 05A3  
                       l90 058C                         l75 064C                         l84 0583  
                       l93 0596                         l78 0597                         l96 060C  
                       l97 060F                         l98 0614                         u10 059D  
                       u11 059C                         u20 05A3                         u21 05A2  
                       fsr 0004                        l120 057A                        l114 06DD  
                      l117 05B7                        l125 05E6                        l134 068E  
                      l128 05CB             lcd_cmd@command 0072                        l259 0743  
                      l740 05A5                        l812 0574                        l830 057B  
                      l742 05A8                        l750 05BC                        l920 06DE  
                      l736 0597                        l832 0580                        l840 0589  
                      l744 05AA                        l752 05BE                        l930 070B  
                      l922 06EE                        l738 059D                        l746 05B4  
                      l754 05C8                        l932 071D                        l924 06F1  
                      l940 073B                        l780 068F                        l748 05B9  
                      l934 072B                        l926 06FE                        l950 0649  
                      l838 0584                        l790 06BF                        l782 0698  
                      l936 072C                        l928 0702                        l952 064A  
                      l944 0615                        l792 06C5                        l784 069E  
                      l960 05D9                        l938 0735                        l954 064B  
                      l946 0619                        l794 06CB                        l786 06AC  
                      l962 05DF                        l970 0672                        l948 061C  
                      l980 05F4                        l972 058D                        l796 06D1  
                      l788 06B5                        l956 05CD                        l964 064D  
                      l982 05FD                        l974 0592                        l798 06D7  
                      l958 05D2                        l966 0650                        l984 0602  
                      l976 05E7                        l968 066C                        l992 0744  
                      l986 0608                        l978 05EC                        l994 0752  
                      _GIE 005F                        l988 0610                        l996 0757  
                      l998 0766                        u210 071D                        u211 071C  
                      u300 0608                        u205 0704                        u301 0607  
                      u230 073B                        u231 073A                        u215 0719  
                      u240 062C                        u225 072D                        u170 06EE  
                      u250 05D2                        u171 06ED                        u251 05D1  
                      u260 05DF                        u245 0627                        u261 05DE  
                      u317 07C2                        u190 0702                        u270 065A  
                      u191 0701                        u327 07EF                        u280 067C  
                      u185 06F3                        u337 05C3                        u290 068E  
             __CFG_CPD$OFF 0000                        u347 0693                        u291 068D  
                      u357 06A2                        u367 06B0                        u377 06BD  
                      u387 05AF                        _adc 002B                        fsr0 0004  
                      indf 0000            ?_lcd_set_cursor 0073               __CFG_LVP$OFF 0000  
                     l1000 076B                       l1010 0795                       l1002 0773  
                     l1020 07BA                       l1012 079E                       l1004 077C  
                     l1030 07E7                       l1022 07C8                       l1014 07A3  
                     l1006 0784                       l1024 07CD                       l1016 07AC  
                     l1008 078D                       l1026 07D6                       l1018 07B5  
                     l1028 07E2                       STR_1 001E                       STR_2 0013  
                     STR_3 0019                       STR_4 0022                       _PEIE 005E  
             __CFG_WRT$OFF 0000     __end_of_lcd_write_char 05CC                       _main 0744  
                     btemp 007E                       start 0000              __CFG_IESO$OFF 0000  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070              __CFG_WDTE$OFF 0000  
                    _ANSEL 0188            __end_of___lldiv 0744                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063             __CFG_FCMEN$OFF 0000            __end_of_lcd_cmd 05B8  
          __end_of_lcd_clr 057B            __end_of_initLCD 06DE             __CFG_BOREN$OFF 0000  
                    pclath 000A            ?_lcd_write_char 0070                      status 0003  
                    wtemp0 007E             __CFG_MCLRE$OFF 0000            __initialization 07F9  
             __end_of_main 07F9                     ??_main 0028          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   _ANSELH 0189                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
        lcd_write_char@var 0072             __CFG_PWRTE$OFF 0000                  ??___lldiv 0078  
 __end_of_lcd_write_string 068F                  ??_lcd_cmd 0070                  ??_lcd_clr 0073  
                ??_initLCD 0073          lcd_write_string@i 0078    __end_of__initialization 07FC  
           __pcstackCOMMON 0070           ??_lcd_set_cursor 0074                 __pbssBANK0 002B  
               __pmaintext 0744           ??_lcd_write_char 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003                    ___lldiv 06DE  
                  __ptext1 064D                    __ptext2 05B8                    __ptext3 05CC  
                  __ptext4 0574                    __ptext5 068F                    __ptext6 05A4  
                  __ptext7 058D                    __ptext8 0584                    __ptext9 057B  
                  _lcd_cmd 05A4                    _lcd_clr 0574                    _initLCD 068F  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  _PORTBbits 0006  
        ?_lcd_write_string 0073         ??_lcd_write_string 0075                  _TRISCbits 0087  
      start_initialization 07F9          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ___latbits 0002              __pcstackBANK0 0020           _I2C_Master_Start 057B  
         _I2C_Master_Write 058D                   ?___lldiv 0070                  __pstrings 0003  
                 ?_lcd_cmd 0070                   ?_lcd_clr 0070                   ?_initLCD 0070  
  __size_of_lcd_set_cursor 001B                __stringbase 0012        I2C_Master_Read@temp 0074  
__size_of_lcd_write_string 0042    __size_of_lcd_write_char 0014           __size_of___lldiv 0066  
       __end_of__stringtab 0013           __size_of_lcd_cmd 0014           __size_of_lcd_clr 0007  
       lcd_set_cursor@posx 0074         lcd_set_cursor@posy 0073            _I2C_Master_Init 0615  
          _I2C_Master_Read 05E7           __size_of_initLCD 004F            _I2C_Master_Wait 0597  
          _I2C_Master_Stop 0584                   __ptext10 05E7                   __ptext11 0597  
                 __ptext12 0615                   __ptext13 06DE          __CFG_BOR4V$BOR40V 0000  
            __size_of_main 00B5   __end_of_I2C_Master_Start 0584   __end_of_I2C_Master_Write 0597  
           _lcd_set_cursor 05CC           ___lldiv@dividend 0074                  stringcode 000D  
  __end_of_I2C_Master_Init 064D    __end_of_I2C_Master_Read 0615    __end_of_I2C_Master_Wait 05A4  
  __end_of_I2C_Master_Stop 058D           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
                 stringdir 000D                   stringtab 0003                _SSPCON2bits 0091  
   __end_of_lcd_set_cursor 05E7           _lcd_write_string 064D             _lcd_write_char 05B8  
      lcd_write_string@var 0073  
